[{"D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\index.js":"1","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\App.js":"2","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\reportWebVitals.js":"3","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\Todo.js":"4","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\firebase.js":"5","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\Nav.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1661,"mtime":1610960649393,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2792,"mtime":1610960981146,"results":"11","hashOfConfig":"8"},{"size":424,"mtime":1610887728124,"results":"12","hashOfConfig":"8"},{"size":360,"mtime":1610960731619,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tj46o2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\index.js",[],["30","31"],"D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\App.js",["32"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n  Grid,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport Todo from \"./Todo\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(\n          snapshot.docs.map((doc) => ({ id: doc.id, todo: doc.data().task }))\n        );\n      });\n  }, []);\n\n  const InputEvent = (e) => {\n    setText(e.target.value);\n  };\n\n  const AddTodo = () => {\n    if (text.trim()) {\n      db.collection(\"todos\").add({\n        task: text,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n      setText(\"\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav text=\"Todo App By Harish\" />\n      <form onSubmit={(e) => e.preventDefault()}>\n        <FormControl>\n          <InputLabel>âœ” Write a Todo</InputLabel>\n          <Input\n            style={{ fontSize: \"20px\" }}\n            type=\"text\"\n            value={text}\n            onChange={InputEvent}\n          />\n        </FormControl>\n        <Button\n          disabled={!text.trim()}\n          onClick={AddTodo}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Add Todo\n        </Button>\n      </form>\n      <div className=\"App__todos\">\n        {todos.map((item) => (\n          <Todo todo={item} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\reportWebVitals.js",[],"D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\Todo.js",["33"],"import React, { useState } from \"react\";\r\nimport \"./Todo.css\";\r\nimport {\r\n  IconButton,\r\n  Modal,\r\n  Button,\r\n  Input,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 300,\r\n    backgroundColor: \"white\",\r\n    border: \"2px solid white\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Todo({ todo }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [text, setText] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const updateTodo = () => {\r\n    if (text.trim()) {\r\n      db.collection(\"todos\").doc(todo.id).set(\r\n        {\r\n          task: text,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        },\r\n        { merge: true }\r\n      );\r\n      setOpen(false);\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal open={open}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h1 style={{ marginBottom: \"20px\" }}>Edit Todo</h1>\r\n          <InputLabel>Update \"{todo.todo}\"</InputLabel>\r\n          <Input\r\n            style={{ fontSize: \"20px\", marginBottom: \"20px\" }}\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n          <br />\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={(e) => setOpen(false)}\r\n            color=\"primary\"\r\n            onClick={updateTodo}\r\n            style={{ marginRight: \"10px\" }}\r\n            disabled={!text.trim()}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={(e) => setOpen(false)}\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"todo__list\">\r\n        <h2>{todo.todo}</h2>\r\n        <IconButton onClick={(e) => setOpen(true)}>\r\n          <EditIcon color=\"primary\" />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={(event) => {\r\n            db.collection(\"todos\").doc(todo.id).delete();\r\n          }}\r\n          color=\"secondary\"\r\n        >\r\n          <DeleteForeverIcon />\r\n        </IconButton>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\firebase.js",["34"],"import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCu4IUuOI0w7Aa_1a2pkkxbQU7xHpCobxU\",\r\n  authDomain: \"todo-app-30c18.firebaseapp.com\",\r\n  projectId: \"todo-app-30c18\",\r\n  storageBucket: \"todo-app-30c18.appspot.com\",\r\n  messagingSenderId: \"1009445801610\",\r\n  appId: \"1:1009445801610:web:0c06bc13127296687e6773\",\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db ;\r\n","D:\\Harish Projects\\js projects\\React projects\\todo-app\\src\\Nav.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":7,"column":3,"nodeType":"41","messageId":"42","endLine":7,"endColumn":7},{"ruleId":"43","severity":1,"message":"44","line":75,"column":13,"nodeType":"45","endLine":75,"endColumn":33},{"ruleId":"39","severity":1,"message":"46","line":3,"column":7,"nodeType":"41","messageId":"42","endLine":3,"endColumn":18},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'firebaseApp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]